name: CI

on:
  push:
    paths-ignore:
      - 'examples/**'
      - '.gitignore'
      - 'README.rst'
  pull_request:
    paths-ignore:
      - 'examples/**'
      - '.gitignore'
      - 'README.rst'

jobs:
  build-package:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-build
      cancel-in-progress: true
    timeout-minutes: 20
    container:
      image: ghcr.io/thombashi/python-ci:3.11

    steps:
      - uses: actions/checkout@v4

      - run: make build

  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-lint
      cancel-in-progress: true
    timeout-minutes: 20
    container:
      image: ghcr.io/thombashi/python-ci:3.11

    steps:
      - uses: actions/checkout@v4

      - run: make check

  unit-test:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-ut-${{ matrix.os }}-${{ matrix.python-version }}
      cancel-in-progress: true
    timeout-minutes: 20

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "pypy-3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - run: make setup-ci

      - name: Run tests
        run: |
          tox -e cov
          # tox -e cov -- --discord-verbose=0  # reduce verbosity level of summary that send to discord

      - name: Upload coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        run: |
          python -m pip install --upgrade --disable-pip-version-check coveralls tomli
          coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
